<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>demo-tpl</artifactId>
        <groupId>com.matrix.call</groupId>
        <version>1.0.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.matrix.call</groupId>
    <artifactId>demo-tpl-release</artifactId>
    <packaging>pom</packaging>

    <!--指定编码-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!--<hibernate.version>5.1.10.Final</hibernate.version>-->
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.matrix.call</groupId>
            <artifactId>demo-tpl-core</artifactId>
            <version>1.0.0</version>
        </dependency>
    </dependencies>



    <build>
        <plugins>
            <!-- 此插件一定要放在maven-assembly-plugin打包插件上面 -->
            <plugin>
                <!-- http://mojo.codehaus.org/appassembler/appassembler-maven-plugin/index.html -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>appassembler-maven-plugin</artifactId>
                <version>1.9</version>
                <executions>
                    <execution>
                        <id>appassembler</id>
                        <phase>package</phase>
                        <goals>
                            <goal>assemble</goal>
                        </goals>
                        <configuration>
                            <!-- change_1 -->
                            <configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
                            <assembleDirectory>${project.build.directory}/${project.artifactId}_run</assembleDirectory>
                            <programs>
                                <program>
                                    <mainClass>com.matrix.call.demo.core.ApplicationLauncher</mainClass>
                                    <name>Application</name>
                                    <!-- <commandLineArguments> <commandLineArgument>arg1</commandLineArgument> <commandLineArgument>arg2</commandLineArgument> </commandLineArguments> -->
                                </program>
                                <program>
                                    <mainClass>com.citms.emc.Application2</mainClass>
                                    <name>Application2</name>
                                    <!-- <commandLineArguments> <commandLineArgument>arg1</commandLineArgument> <commandLineArgument>arg2</commandLineArgument> </commandLineArguments> -->
                                </program>
                            </programs>

                            <repositoryLayout>flat</repositoryLayout>
                            <repositoryName>lib</repositoryName>
                            <useWildcardClassPath>true</useWildcardClassPath>
                            <!-- Set the target configuration directory to be used in the bin scripts -->
                            <configurationDirectory>conf</configurationDirectory>
                            <copyConfigurationDirectory>true</copyConfigurationDirectory>
                            <!-- Include the target configuration directory in the beginning of the classpath declaration in the bin scripts -->
                            <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
                            <!--<binPrefix>startup</binPrefix>-->
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <!-- <extraJvmArguments>-Xms768m -Xmx1024m -XX:PermSize=128m -XX:MaxPermSize=256m -XX:NewSize=192m -XX:MaxNewSize=384m </extraJvmArguments> -->
                            <platforms>
                                <platform>windows</platform>
                                <platform>unix</platform>
                            </platforms>
                        </configuration>
                    </execution>


                    <!-- daemon -->
                    <execution>
                        <id>daemonser</id>
                        <phase>package</phase>
                        <goals>
                            <goal>generate-daemons</goal>
                        </goals>
                        <configuration>
                            <!--change_1 -->
                            <target>${project.build.directory}/${project.artifactId}_run/daemon</target>
                            <logsDirectory>logs</logsDirectory>
                            <configurationSourceDirectory>src/main/resources</configurationSourceDirectory>

                            <configurationDirectory>conf</configurationDirectory>
                            <copyConfigurationDirectory>true</copyConfigurationDirectory>
                            <repositoryLayout>flat</repositoryLayout>
                            <repositoryName>lib</repositoryName>
                            <useWildcardClassPath>true</useWildcardClassPath>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <daemons>
                                <daemon>
                                    <id>${project.artifactId}</id>
                                    <wrapperMainClass>org.tanukisoftware.wrapper.WrapperSimpleApp</wrapperMainClass>
                                    <!--change_2 -->
                                    <mainClass>com.matrix.call.demo.core.ApplicationLauncher</mainClass>
                                    <commandLineArguments>
                                        <!-- http://286.iteye.com/blog/1915478 -->
                                        <commandLineArgument>argument_one</commandLineArgument>
                                        <commandLineArgument>argument_two</commandLineArgument>
                                    </commandLineArguments>
                                    <generatorConfigurations>
                                        <generatorConfiguration>
                                            <generator>jsw</generator>
                                            <includes>
                                                <include>linux-x86-32</include>
                                                <include>linux-x86-64</include>
                                                <include>windows-x86-32</include>
                                                <include>windows-x86-64</include>
                                            </includes>
                                            <configuration>
                                                <property>
                                                    <name>wrapper.logfile.loglevel</name>
                                                    <value>WARN</value>
                                                </property>
                                            </configuration>
                                        </generatorConfiguration>
                                    </generatorConfigurations>
                                    <platforms>
                                        <platform>jsw</platform>
                                    </platforms>
                                    <!-- <jvmSettings> <initialMemorySize>768M</initialMemorySize> <maxMemorySize>1024M</maxMemorySize> <maxStackSize>128M</maxStackSize> </jvmSettings> -->
                                </daemon>
                            </daemons>
                        </configuration>
                    </execution>


                </executions>
            </plugin>
            <!-- 打包插件 -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <descriptor>package.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <!-- 拷贝Dockerfile方便Jenkins构建容器 -->
                    <execution>
                        <id>copy-docker-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/docker</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <encoding>UTF-8</encoding>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- 构建信息 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>1.5.8.RELEASE</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                        <configuration>
                            <additionalProperties>
                                <encoding.source>UTF-8</encoding.source>
                                <encoding.reporting>UTF-8</encoding.reporting>
                                <os.name>${os.name}</os.name>
                                <os.version>${os.version}</os.version>
                                <user.name>${user.name}</user.name>
                                <java.version>${java.version}</java.version>
                                <java.home>${java.home}</java.home>
                                <computername>${java.home}</computername>
                                <fingerprint>
                                    ${os.name}--${os.version}--${user.name}--${user.home}--${java.home}--${java.version}--${maven.build.timestamp}
                                </fingerprint>
                            </additionalProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>